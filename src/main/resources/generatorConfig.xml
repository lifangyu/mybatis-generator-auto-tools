<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!--mysql 连接数据库jar 这里选择自己本地位置-->
    <classPathEntry location="C://Users//lifangyu//.m2//repository//mysql//mysql-connector-java//5.1.22//mysql-connector-java-5.1.22.jar" />
    <context id="testTables" targetRuntime="MyBatis3">
        <!--使用自定义的类DG2CommentGenerator-->
        <commentGenerator type="org.mybatis.generator.internal.DG2CommentGenerator">
            <!-- 生成java文件的编码 -->
            <property name="javaFileEncoding" value="UTF-8"/>
            <!-- 是否去除自动生成的注释 true：是 ： false:否 修改版-没有使用 -->
            <property name="suppressAllComments" value="false" />
            <!-- 是否显示数据库 字段备注信息 true 显示  suppressAllComments =false 才有效  修改版-没有使用
            <property name="addRemarkComments" value="true" />  -->
            <!-- 是否生成注释代时间戳-->
            <property name="suppressDate" value="true" />

        </commentGenerator>

        <!--数据库连接的信息：驱动类、连接地址、用户名、密码 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/erp"
                        userId="root" password="root">
        </jdbcConnection>
        <!--
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
			            connectionURL="jdbc:mysql://115.159.198.105:3307/yifang_yuxiang_dev2"
                        userId="xu_papapa_dev" password="86_345fde008401">
		</jdbcConnection>
		-->
        <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和
           NUMERIC 类型解析为java.math.BigDecimal -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>

        <!-- targetProject:生成PO类的位置 -->
        <javaModelGenerator targetPackage="com.mybatis.model"
                            targetProject="src/main/java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false" />
            <!-- 从数据库返回的值被清理前后的空格 -->
            <property name="trimStrings" value="true" />
        </javaModelGenerator>
        <!-- targetProject:mapper映射文件生成的位置
           如果maven工程只是单独的一个工程，targetProject="src/main/java"
           若果maven工程是分模块的工程，targetProject="所属模块的名称"，例如：
           targetProject="ecps-manager-mapper"，下同-->
        <sqlMapGenerator targetPackage="mybatis.mappers"
                         targetProject="src/main/resources">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false" />
        </sqlMapGenerator>
        <!-- targetPackage：mapper接口生成的位置 -->
        <javaClientGenerator type="XMLMAPPER"
                             targetPackage="com.mybatis.mapper"
                             targetProject="src/main/java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false" />
        </javaClientGenerator>

        <!-- 指定数据库表 - 可以一次性生成多个表-->
        <table tableName="erp_roomer_info"
               domainObjectName="ErpRoomerInfo"
               enableCountByExample="false"
               enableDeleteByExample="fasle"
               enableSelectByExample="false"
               enableUpdateByExample="false"
               selectByExampleQueryId="fasle" >

            <!--
            insert sql 返回Sequence主键值[如果是自动增长的id主键：建议在sql中添加 <insert id="insert" useGeneratedKeys="true" keyColumn="id" keyProperty="id"> ]
            -->
            <generatedKey column="id" sqlStatement="MySql"/>

            <!-- generatedKey用于生成生成主键的方法，
                        如果设置了该元素，MBG会在生成的<insert>元素中生成一条正确的<selectKey>元素，该元素可选
                        column:主键的列名；
                        sqlStatement：要生成的selectKey语句，有以下可选项：
                            Cloudscape:相当于selectKey的SQL为： VALUES IDENTITY_VAL_LOCAL()
                            DB2       :相当于selectKey的SQL为： VALUES IDENTITY_VAL_LOCAL()
                            DB2_MF    :相当于selectKey的SQL为：SELECT IDENTITY_VAL_LOCAL() FROM SYSIBM.SYSDUMMY1
                            Derby      :相当于selectKey的SQL为：VALUES IDENTITY_VAL_LOCAL()
                            HSQLDB      :相当于selectKey的SQL为：CALL IDENTITY()
                            Informix  :相当于selectKey的SQL为：select dbinfo('sqlca.sqlerrd1') from systables where tabid=1
                            MySql      :相当于selectKey的SQL为：SELECT LAST_INSERT_ID()
                            SqlServer :相当于selectKey的SQL为：SELECT SCOPE_IDENTITY()
                            SYBASE      :相当于selectKey的SQL为：SELECT @@IDENTITY
                            JDBC      :相当于在生成的insert元素上添加useGeneratedKeys="true"和keyProperty属性
             -->

            <!-- 忽略列，不生成bean 字段
			<ignoreColumn column="version" />  -->

            <!-- 指定列的java数据类型
            <columnOverride column="version" jdbcType="VARCHAR" />-->

            <!-- ignoreColumn设置一个MGB忽略的列，如果设置了改列，那么在生成的domain中，生成的SQL中，都不会有该列出现
                 column:指定要忽略的列的名字；delimitedColumnName：参考table元素的delimitAllColumns配置，默认为false
                注意，一个table元素中可以有多个ignoreColumn元素
            <ignoreColumn column="codeName" delimitedColumnName=""/>
             -->
        </table>

    </context>
</generatorConfiguration>